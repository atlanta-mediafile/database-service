name: CI Build

on:
  push:
    branches:
      - test
  pull_request: 
    branches: 
      - test

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'

      - name: Install npm dependencies
        run: |
          npm ci --only=production
          npm install --save-dev @types/node
          npm install -g typescript

      - name: Test
        run: echo "Test ..."

  version:
    runs-on: ubuntu-latest
    needs: [test]
    if: success()
    permissions: 
      contents: write
    outputs:
      new_version: ${{ steps.version.outputs.new_version }}
    steps:
      - uses: actions/checkout@v4

      - name: Add global config
        run: |
          git config --global user.name 'diegomated1'
          git config --global user.email 'diegocardwr2@gmail.com'

      - name: Grants permisions
        run: chmod +x ./bin/version.sh

      - name: Change version
        id: version
        run: echo "new_version=$(./bin/version.sh "${{ github.event.head_commit.message }}")" >> $GITHUB_OUTPUT

      - name: Push version
        run: |
          git add .
          git commit -am "chore: update app version ${{ steps.version.outputs.new_version }}"
          git push

      - name: Merge test to main
        uses: devmasx/merge-branch@master
        with:
          type: now
          target_branch: main
          github_token: ${{ secrets.GITHUB_TOKEN }}

  release:
    runs-on: ubuntu-latest
    needs: [test, version]
    if: success()
    permissions: 
      contents: write
    steps:
      - uses: actions/checkout@v4

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          name: Release ${{ needs.version.outputs.new_version }}
          tag_name: ${{ needs.version.outputs.new_version }}

  publish:
    runs-on: ubuntu-latest
    needs: [test, version]
    if: success()
    permissions: 
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DH_USERNAME }}
          password: ${{ secrets.DH_PASSWORD }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ secrets.DH_USERNAME }}/${{ github.event.repository.name }}:${{ needs.version.outputs.new_version }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy:
    runs-on: ubuntu-latest
    needs: [publish]
    steps:
    - uses: actions/checkout@v4
    - name: Deploy docker
      uses: appleboy/ssh-action@v1.0.3
      with:

        host: ${{ secrets.DEPLOY_HOST }}
        port: ${{ secrets.DEPLOY_PORT }}
        username: ${{ secrets.DEPLOY_USERNAME }}
        key: ${{ secrets.DEPLOY_PRIVATE_KEY }}

        proxy_host: ${{ secrets.DEPLOY_PROXY_HOST }}
        proxy_port: ${{ secrets.DEPLOY_PROXY_PORT }}
        proxy_username: ${{ secrets.DEPLOY_PROXY_USERNAME }}
        proxy_key: ${{ secrets.DEPLOY_PROXY_KEY }}

        script: |
          cd database-service
          git pull origin main
          
          docker compose down
          docker compose up -d